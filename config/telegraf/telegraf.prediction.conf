[global_tags]
  project = "smartcity"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = false

# MQTT Consumer for Device Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://emqx:1883"]
  topics = [
    "smartcity/+/+/data"
  ]
  qos = 1
  data_format = "json"
  json_string_fields = ["device_id", "device_type", "status"]
  json_name_key = "device_type"
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05.999999Z"

  # Add tags from topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "smartcity/+/+/data"
    tags = "_/device_type/device_id"

# MQTT Consumer for Prediction Data
[[inputs.mqtt_consumer]]
  servers = ["tcp://emqx:1883"]
  topics = [
    "smartcity/+/+/prediction"
  ]
  qos = 1
  data_format = "json"  
  json_string_fields = ["device_id", "device_type", "model_name", "prediction"]
  json_time_key = "timestamp"
  json_time_format = "2006-01-02T15:04:05.999999Z"



  # Add measurement name for predictions
  name_override = "device_predictions"
  
  # Add tags from topic
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "smartcity/+/+/+"
    tags = "_/_/device_type/device_id/model_name"

# Output Plugin for InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${INFLUX_TOKEN}"
  organization = "smartcity"
  bucket = "iot_data"

